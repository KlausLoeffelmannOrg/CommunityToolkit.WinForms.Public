//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Chatty.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Chatty.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Important:
        ///* If the response will include code-blocks (or even plain-text listings), we need to first send out a couple of meta-information data,
        ///   like for example `{{[0]:c#}}` and `{{[1]:FrmSuperForm.cs}}`. 
        ///   So, the general structure of code-blocks in that case is
        ///
        ///      {{[0]:c#}}{{[1]:FrmSuperForm.cs}}{{[2]:ViewModel class for managing Employees, implementing `INotifyPropertyChanged`}}
        ///      ```codeBlockType
        ///      // Here comes the actual code block
        ///      ```
        ///  It is important to keep the o [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string CodeBlockAddendum {
            get {
                return ResourceManager.GetString("CodeBlockAddendum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please write a Summary of this conversation. The Summary should not have more than 4000 characters, but it can have (even much) less characters, if it makes sense. .
        /// </summary>
        internal static string Prompt_RequestChatSummary {
            get {
                return ResourceManager.GetString("Prompt_RequestChatSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide a title for the following conversation..
        /// </summary>
        internal static string Prompt_RequestConversationTitle {
            get {
                return ResourceManager.GetString("Prompt_RequestConversationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide {0} keywords for the following conversation. 
        ///Try to find the keywords in such a way that they become increasingly specific/concrete from original rather generalized..
        /// </summary>
        internal static string Prompt_RequestKeywords {
            get {
                return ResourceManager.GetString("Prompt_RequestKeywords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Today is {0}. It is {1}. 
        ///You are an assistant in an LLM Chat-Bot client software. 
        ///You&apos;re purpose is to provide certain meta information during a typical LLM chat with a user, like:
        ///
        ///* Writing chat summaries
        ///* Finding titles for chat topics
        ///* Finding short description for provided code snippets in technical discussions about software development.
        ///* Providing keywords for chat conversations.
        ///.
        /// </summary>
        internal static string SystemPrompt_MetaInfo {
            get {
                return ResourceManager.GetString("SystemPrompt_MetaInfo", resourceCulture);
            }
        }
    }
}
